j# Kubernetes Web App Setup Guide

## Project Structure
```
my-web-app/
├── app/
│   ├── main.py
│   └── requirements.txt
├── Dockerfile
└── k8s/
    ├── deployment.yaml
    └── service.yaml
```

## 1. Dockerfile (unchanged)
```dockerfile
FROM python:3.9-slim
WORKDIR /app
COPY app/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY app/ .
EXPOSE 5000
CMD ["python", "main.py"]
```

## 2. Kubernetes Deployment (k8s/deployment.yaml)
```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: webapp:latest
        ports:
        - containerPort: 5000
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
```

## 3. Kubernetes Service (k8s/service.yaml)
```yaml
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: webapp
```

## Deployment Steps

1. Build Docker image:
```bash
docker build -t webapp:latest .
```

2. For local development with Minikube:
```bash
# Start Minikube
minikube start

# Load image into Minikube
minikube image load webapp:latest

# Apply Kubernetes manifests
kubectl apply -f k8s/

# Get service URL
minikube service webapp-service
```

## Common kubectl Commands
```bash
# View pods
kubectl get pods

# View logs
kubectl logs <pod-name>

# Scale deployment
kubectl scale deployment webapp --replicas=5

# Delete resources
kubectl delete -f k8s/
```
